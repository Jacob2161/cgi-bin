#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail

VEGETA_DIR="vegeta"
DURATION="15s"
MAX_WORKERS="2500"
CONNECTIONS="250"
HOST="${1:-localhost}"
CGIS="${2:-go}"
RATE_BASE="${3:-3000}"
RATE_INCREMENT="${4:-100}"

# CGIS should be everything after $1
if [[ "${HOST}" == "" ]]; then
  echo "Usage: $0 <HOST> <CGIS> <BASE RATE>"
  echo "Example: $0 example.com 'rs c go'"
  exit 1
fi

# Set the maximum number of open files to something high.
ulimit -n 50000

echo "Starting Vegeta benchmark CGIs [${CGIS}] on ${HOST}..."

# Clear the results directory
mkdir --parents "${VEGETA_DIR}/results"

for CGI in ${CGIS}; do
  echo "Clearing previous results ${CGI}..."
  find "${VEGETA_DIR}/results" -type f -name "*.${CGI}.*" -exec rm --verbose {} +

  echo "Warming with quick read ${CGI}..."
  cat ${VEGETA_DIR}/reads.targets \
  | sed "s/CGI/${CGI}/g" \
  | sed "s/HOST/${HOST}/g" \
  | vegeta attack \
    --rate "${RATE_BASE}" \
    --connections "${CONNECTIONS}" \
    --max-workers "${MAX_WORKERS}" \
    --duration 2s \
    >/dev/null

  for i in $(seq 1 1000); do
    RATE=$((RATE_BASE + (i * RATE_INCREMENT)))
    echo "Benchmarking for ${CGI} at rate ${RATE} req/s..."

    OUTPUT_FILE="${VEGETA_DIR}/results/writes.${CGI}.${RATE}.bin"
    REPORT_TEXT_FILE="${VEGETA_DIR}/results/writes.${CGI}.${RATE}.txt"
    REPORT_JSON_FILE="${VEGETA_DIR}/results/writes.${CGI}.${RATE}.json"

    PLOT_FILE="${VEGETA_DIR}/results/writes.${CGI}.${RATE}.html"

    cat ${VEGETA_DIR}/writes.targets \
    | sed "s/CGI/${CGI}/g" \
    | sed "s/HOST/${HOST}/g" \
    | vegeta attack \
      --name "writes-${CGI}-${RATE}" \
      --rate "${RATE}" \
      --duration "${DURATION}" \
      --connections "${CONNECTIONS}" \
      --timeout 5s \
      --max-workers "${MAX_WORKERS}" \
      --output "${OUTPUT_FILE}"

    echo "Generating text report for ${CGI} at rate ${RATE} req/s..."
    vegeta report \
      --type text \
      --output "${REPORT_TEXT_FILE}" \
      "${OUTPUT_FILE}"

    echo "Generating JSON report for ${CGI} at rate ${RATE} req/s..."
    vegeta report \
      --type json \
      --output "${REPORT_JSON_FILE}" \
      "${OUTPUT_FILE}"

    echo "Generating plot for ${CGI} at rate ${RATE} req/s..."
    vegeta plot \
      --title "${CGI} ${RATE} req/s Writes" \
      < "${OUTPUT_FILE}" >"${PLOT_FILE}"
    
    SUCCESS_PERCENT="$(jq --raw-output .success < "${REPORT_JSON_FILE}")"
    if [[ "${SUCCESS_PERCENT}" != "1" ]]; then
      echo "Success rate for ${CGI} at ${RATE} req/s is ${SUCCESS_PERCENT}% so skipping further tests."
      echo
      break
    fi

    echo "Success rate for ${CGI} at ${RATE} req/s is 100%"
    echo
    sleep 2
  done
done
