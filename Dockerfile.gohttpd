# Build guestbook
FROM golang:1.24-bookworm AS build-guestbook
RUN apt-get update && apt-get install -y build-essential libsqlite3-dev && rm --recursive --force /var/lib/apt/lists/*
WORKDIR /src
COPY guestbook/go.mod guestbook/go.sum* ./
RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  go mod download

COPY guestbook/main.go ./
ENV CGO_ENABLED=1 GOOS=linux GOARCH=amd64
RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  go build -tags "sqlite_omit_load_extension" \
      -ldflags='-s -w -linkmode=external -extldflags "-static"' \
      -o guestbook.cgi ./main.go

# Build gohttpd
FROM golang:1.24-bookworm AS build-gohttpd
WORKDIR /src
COPY gohttpd/go.mod gohttpd/go.sum* ./
RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  go mod download

COPY gohttpd/main.go ./
ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64
RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  go build \
    -ldflags='-s -w -extldflags "-static"' \
    -o gohttpd ./main.go

# Server container
FROM debian:bookworm-slim
ARG PORT=1111
ARG HTTP_LISTEN_ADDRESS=0.0.0.0:${PORT}

# Copy the gohttpd binary
COPY --from=build-gohttpd /src/gohttpd /usr/local/bin/gohttpd
RUN chmod +x /usr/local/bin/gohttpd

# Create user directory
RUN mkdir --parents /home/jakegold/cgi-bin

# Copy the CGI script
COPY --from=build-guestbook /src/guestbook.cgi /home/jakegold/cgi-bin/guestbook.cgi
RUN chmod 755 /home/jakegold/cgi-bin/guestbook.cgi

EXPOSE ${PORT}
ENTRYPOINT ["/usr/local/bin/gohttpd"]
